{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst startBtn = document.querySelector('[data-start]');\nconst dateTimePicker = document.getElementById('datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate = null;\nlet timerId = null;\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const selectedDate = selectedDates[0];\n    if (selectedDate <= new Date()) {\n      iziToast.warning({\n        message: \"Please choose a date in the future\",\n        position: \"topRight\",\n      });\n      startBtn.disabled = true;\n    } else {\n      userSelectedDate = selectedDate;\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(dateTimePicker, options);\n\nstartBtn.addEventListener('click', () => {\n  if (!userSelectedDate) return;\n\n  startBtn.disabled = true;\n  dateTimePicker.disabled = true;\n\n  timerId = setInterval(() => {\n    const currentTime = new Date();\n    const deltaTime = userSelectedDate - currentTime;\n\n    if (deltaTime <= 0) {\n      clearInterval(timerId);\n      updateTimerUI({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      dateTimePicker.disabled = false;\n      return;\n    }\n\n    const time = convertMs(deltaTime);\n    updateTimerUI(time);\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  daysEl.textContent = String(days).padStart(2, '0');\n  hoursEl.textContent = String(hours).padStart(2, '0');\n  minutesEl.textContent = String(minutes).padStart(2, '0');\n  secondsEl.textContent = String(seconds).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["startBtn","dateTimePicker","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","timerId","options","selectedDates","selectedDate","iziToast","flatpickr","deltaTime","updateTimerUI","time","convertMs","days","hours","minutes","seconds","ms"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAAmB,KACnBC,EAAU,KACdP,EAAS,SAAW,GAEpB,MAAMQ,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACtBC,EAAS,QAAQ,CACf,QAAS,qCACT,SAAU,UAClB,CAAO,EACDX,EAAS,SAAW,KAEpBM,EAAmBI,EACnBV,EAAS,SAAW,GAEvB,CACH,EAEAY,EAAUX,EAAgBO,CAAO,EAEjCR,EAAS,iBAAiB,QAAS,IAAM,CAClCM,IAELN,EAAS,SAAW,GACpBC,EAAe,SAAW,GAE1BM,EAAU,YAAY,IAAM,CAE1B,MAAMM,EAAYP,EADE,IAAI,KAGxB,GAAIO,GAAa,EAAG,CAClB,cAAcN,CAAO,EACrBO,EAAc,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAC3Db,EAAe,SAAW,GAC1B,MACD,CAED,MAAMc,EAAOC,EAAUH,CAAS,EAChCC,EAAcC,CAAI,CACnB,EAAE,GAAI,EACT,CAAC,EAED,SAASD,EAAc,CAAE,KAAAG,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACxDlB,EAAO,YAAc,OAAOe,CAAI,EAAE,SAAS,EAAG,GAAG,EACjDd,EAAQ,YAAc,OAAOe,CAAK,EAAE,SAAS,EAAG,GAAG,EACnDd,EAAU,YAAc,OAAOe,CAAO,EAAE,SAAS,EAAG,GAAG,EACvDd,EAAU,YAAc,OAAOe,CAAO,EAAE,SAAS,EAAG,GAAG,CACzD,CAEA,SAASJ,EAAUK,EAAI,CAMrB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAC1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EACpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EACjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}